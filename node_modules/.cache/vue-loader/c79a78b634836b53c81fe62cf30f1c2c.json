{"remainingRequest":"/Users/riyabm/Desktop/smart-bookmark-manager/node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css","dependencies":[{"path":"/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue","mtime":1740523422670},{"path":"/Users/riyabm/Desktop/smart-bookmark-manager/node_modules/css-loader/dist/cjs.js","mtime":1740000180165},{"path":"/Users/riyabm/Desktop/smart-bookmark-manager/node_modules/vue-loader/dist/stylePostLoader.js","mtime":1740000180304},{"path":"/Users/riyabm/Desktop/smart-bookmark-manager/node_modules/postcss-loader/dist/cjs.js","mtime":1740000180085},{"path":"/Users/riyabm/node_modules/cache-loader/dist/cjs.js","mtime":1734027175000},{"path":"/Users/riyabm/Desktop/smart-bookmark-manager/node_modules/vue-loader/dist/index.js","mtime":1740000180205}],"contextDependencies":[],"result":["\n.search-container {\n  display: flex;\n  justify-content: center; /* Centers the items horizontally */\n  align-items: center; /* Centers the items vertically if needed */\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-container input {\n  padding: 8px;\n  font-size: 14px;\n}\n\n.search-container button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-container button:hover {\n  background-color: #0056c1;\n}\n\n",{"version":3,"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"names":[],"mappings":";AA2GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACbhE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B","file":"/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <AppHeader />\n    <div class=\"main-container\">\n      <!-- Search Component -->\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchQuery\" \n          type=\"text\" \n          placeholder=\" \" \n        />\n        <button @click=\"searchBookmarks\">Search</button>\n      </div>\n\n      <!-- Create Bookmark Component -->\n      <CreateBookmark @create-bookmark=\"addBookmark\" />\n\n      <!-- Bookmark List Display -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n\n    // Computed property for searched bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    // Load from localStorage when app starts\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save changes to localStorage\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(), // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    const searchBookmarks = () => {\n      // Trigger computed property to filter bookmarks when the button is clicked\n      // You can add any extra logic for search button click if needed\n    };\n\n    return { \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks,\n      searchBookmarks,\n    };\n  }\n};\n</script>\n\n<style scoped>\n.search-container {\n  display: flex;\n  justify-content: center; /* Centers the items horizontally */\n  align-items: center; /* Centers the items vertically if needed */\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-container input {\n  padding: 8px;\n  font-size: 14px;\n}\n\n.search-container button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-container button:hover {\n  background-color: #0056c1;\n}\n\n</style>\n\n\n\n"]}]}