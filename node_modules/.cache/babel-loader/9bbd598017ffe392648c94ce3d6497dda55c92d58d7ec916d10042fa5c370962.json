{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"controls\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"header\", {\n    class: _normalizeClass($props.mode)\n  }, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"logo\"\n  }, [_createElementVNode(\"h1\", null, \"Smart Bookmark Manager\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    class: \"search-bar\",\n    type: \"text\",\n    placeholder: \"Search Bookmarks\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.searchBookmarks && $setup.searchBookmarks(...args)),\n    class: \"search-btn\"\n  }, \"Search\"), _createCommentVNode(\" Dark/Light Mode Toggle \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.toggleMode && $setup.toggleMode(...args)),\n    class: \"mode-toggle-btn\"\n  }, _toDisplayString($props.mode === 'light' ? 'Dark Mode' : 'Light Mode'), 1 /* TEXT */), _createCommentVNode(\" + button to open form \"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.toggleForm && $setup.toggleForm(...args)),\n    class: \"plus-button\"\n  }, \"+\")])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$props","mode","_createElementVNode","_hoisted_1","_cache","$event","$setup","searchQuery","type","placeholder","onClick","args","searchBookmarks","_createCommentVNode","toggleMode","toggleForm"],"sources":["/Users/riyabm/Documents/GitHub/smart-bookmark-manager/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header :class=\"mode\">\n    <div class=\"logo\">\n      <h1>Smart Bookmark Manager</h1>\n    </div>\n    <div class=\"controls\">\n      <input \n        v-model=\"searchQuery\" \n        class=\"search-bar\"\n        type=\"text\" \n        placeholder=\"Search Bookmarks\" \n      />\n      <button @click=\"searchBookmarks\" class=\"search-btn\">Search</button>\n\n      <!-- Dark/Light Mode Toggle -->\n      <button @click=\"toggleMode\" class=\"mode-toggle-btn\">\n        {{ mode === 'light' ? 'Dark Mode' : 'Light Mode' }}\n      </button>\n\n      <!-- + button to open form -->\n      <button @click=\"toggleForm\" class=\"plus-button\">+</button>\n    </div>\n  </header>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  props: {\n    mode: String\n  },\n  emits: ['toggle-mode', 'toggle-form'], // Emit toggle-form event to parent\n  setup(props, { emit }) {\n    const searchQuery = ref('');\n    \n    const toggleMode = () => {\n      emit('toggle-mode');\n    };\n\n    const toggleForm = () => {\n      emit('toggle-form'); // Emit event to toggle form visibility in parent component\n    };\n\n    const searchBookmarks = () => {\n      console.log(searchQuery.value);\n    };\n\n    return { \n      searchQuery, \n      toggleMode, \n      toggleForm,\n      searchBookmarks\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Styles for the header */\nheader {\n  padding: 1rem;\n  background-color: var(--header-bg, #ffffff);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n/* Light mode styles */\nheader.light {\n  background-color: #ffffff;\n  color: #000;\n}\n\n/* Dark mode styles with dark blue background */\nheader.dark {\n  background-color: #003366; /* Dark blue color */\n  color: #fff;\n}\n\n.controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.search-bar {\n  padding: 8px;\n  font-size: 14px;\n  width: 200px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\n.search-btn, .mode-toggle-btn, .plus-button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-btn:hover, .mode-toggle-btn:hover, .plus-button:hover {\n  background-color: #0056c1;\n}\n\n.plus-button {\n  font-size: 20px;\n  padding: 10px;\n}\n</style>\n"],"mappings":";;EAKSA,KAAK,EAAC;AAAU;;uBAJvBC,mBAAA,CAqBS;IArBAD,KAAK,EADhBE,eAAA,CACkBC,MAAA,CAAAC,IAAI;gCAClBC,mBAAA,CAEM;IAFDL,KAAK,EAAC;EAAM,IACfK,mBAAA,CAA+B,YAA3B,wBAAsB,E,sBAE5BA,mBAAA,CAgBM,OAhBNC,UAgBM,G,gBAfJD,mBAAA,CAKE;IAXR,uBAAAE,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOiBC,MAAA,CAAAC,WAAW,GAAAF,MAAA;IACpBR,KAAK,EAAC,YAAY;IAClBW,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAHHH,MAAA,CAAAC,WAAW,E,GAKtBL,mBAAA,CAAmE;IAA1DQ,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEL,MAAA,CAAAM,eAAA,IAAAN,MAAA,CAAAM,eAAA,IAAAD,IAAA,CAAe;IAAEd,KAAK,EAAC;KAAa,QAAM,GAE1DgB,mBAAA,4BAA+B,EAC/BX,mBAAA,CAES;IAFAQ,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEL,MAAA,CAAAQ,UAAA,IAAAR,MAAA,CAAAQ,UAAA,IAAAH,IAAA,CAAU;IAAEd,KAAK,EAAC;sBAC7BG,MAAA,CAAAC,IAAI,2DAGTY,mBAAA,2BAA8B,EAC9BX,mBAAA,CAA0D;IAAjDQ,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEL,MAAA,CAAAS,UAAA,IAAAT,MAAA,CAAAS,UAAA,IAAAJ,IAAA,CAAU;IAAEd,KAAK,EAAC;KAAc,GAAC,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}