{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"header\", {\n    class: _normalizeClass($props.mode)\n  }, [_createElementVNode(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h1\", null, \"Smart Bookmark Manager\", -1 /* HOISTED */)), _createCommentVNode(\" + button to trigger the opening of the bookmark form \"), _createElementVNode(\"button\", {\n    class: \"toggle-form-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleForm && $options.toggleForm(...args))\n  }, \"+\"), _createCommentVNode(\" Button to toggle dark/light mode \"), _createElementVNode(\"button\", {\n    class: \"mode-toggle-button\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.toggleMode && _ctx.toggleMode(...args))\n  }, _toDisplayString($props.mode === 'light' ? 'Dark' : 'Light') + \" Mode\", 1 /* TEXT */)])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$props","mode","_createElementVNode","_hoisted_1","_createCommentVNode","onClick","_cache","args","$options","toggleForm","_ctx","toggleMode"],"sources":["/Users/riyabm/Documents/GitHub/smart-bookmark-manager/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header :class=\"mode\">\n    <div class=\"header-content\">\n      <h1>Smart Bookmark Manager</h1>\n      <!-- + button to trigger the opening of the bookmark form -->\n      <button class=\"toggle-form-button\" @click=\"toggleForm\">+</button>\n      <!-- Button to toggle dark/light mode -->\n      <button class=\"mode-toggle-button\" @click=\"toggleMode\">{{ mode === 'light' ? 'Dark' : 'Light' }} Mode</button>\n    </div>\n  </header>\n</template>\n\n<script>\nexport default {\n  props: {\n    mode: String,\n  },\n  methods: {\n    // Emit event to toggle form visibility in App.vue\n    toggleForm() {\n      this.$emit('toggle-form');\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Header styling */\nheader {\n  display: flex;\n  justify-content: space-between;\n  padding: 10px 20px;\n  background-color: #0070f3;\n  color: white;\n}\n\n.header-content h1 {\n  margin: 0;\n  font-size: 1.6rem;\n}\n\n.toggle-form-button, .mode-toggle-button {\n  background: #fff;\n  color: #0070f3;\n  padding: 8px 15px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  font-size: 1rem;\n}\n\n.toggle-form-button:hover, .mode-toggle-button:hover {\n  background: #f0f0f0;\n}\n</style>\n"],"mappings":";;EAESA,KAAK,EAAC;AAAgB;;uBAD7BC,mBAAA,CAQS;IARAD,KAAK,EADhBE,eAAA,CACkBC,MAAA,CAAAC,IAAI;MAClBC,mBAAA,CAMM,OANNC,UAMM,G,0BALJD,mBAAA,CAA+B,YAA3B,wBAAsB,sBAC1BE,mBAAA,0DAA6D,EAC7DF,mBAAA,CAAiE;IAAzDL,KAAK,EAAC,oBAAoB;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,GAAC,GACxDH,mBAAA,sCAAyC,EACzCF,mBAAA,CAA8G;IAAtGL,KAAK,EAAC,oBAAoB;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEG,IAAA,CAAAC,UAAA,IAAAD,IAAA,CAAAC,UAAA,IAAAJ,IAAA,CAAU;sBAAKP,MAAA,CAAAC,IAAI,mCAAkC,OAAK,gB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}