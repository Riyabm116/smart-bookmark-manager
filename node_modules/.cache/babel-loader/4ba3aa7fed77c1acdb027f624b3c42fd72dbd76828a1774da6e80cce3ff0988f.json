{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Sidebar = _resolveComponent(\"Sidebar\");\n  const _component_TopBar = _resolveComponent(\"TopBar\");\n  const _component_BookmarkList = _resolveComponent(\"BookmarkList\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['app-container', $setup.darkMode ? 'dark-mode' : 'light-mode'])\n  }, [_createCommentVNode(\" Sidebar \"), _createVNode(_component_Sidebar, {\n    onFilterCategory: $setup.filterByCategory\n  }, null, 8 /* PROPS */, [\"onFilterCategory\"]), _createCommentVNode(\" Main Content \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_TopBar, {\n    modelValue: $setup.searchQuery,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    onAddBookmark: _ctx.openAddBookmarkModal,\n    onToggleDarkMode: $setup.toggleDarkMode\n  }, null, 8 /* PROPS */, [\"modelValue\", \"onAddBookmark\", \"onToggleDarkMode\"]), _createCommentVNode(\" Bookmark List \"), _createVNode(_component_BookmarkList, {\n    bookmarks: $setup.filteredBookmarks,\n    onDeleteBookmark: $setup.deleteBookmark,\n    onUpdateBookmark: $setup.updateBookmark\n  }, null, 8 /* PROPS */, [\"bookmarks\", \"onDeleteBookmark\", \"onUpdateBookmark\"])])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","darkMode","_createCommentVNode","_createVNode","_component_Sidebar","onFilterCategory","filterByCategory","_createElementVNode","_hoisted_1","_component_TopBar","modelValue","searchQuery","_cache","$event","onAddBookmark","_ctx","openAddBookmarkModal","onToggleDarkMode","toggleDarkMode","_component_BookmarkList","bookmarks","filteredBookmarks","onDeleteBookmark","deleteBookmark","onUpdateBookmark","updateBookmark"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"['app-container', darkMode ? 'dark-mode' : 'light-mode']\">\n    <!-- Sidebar -->\n    <Sidebar @filterCategory=\"filterByCategory\" />\n\n    <!-- Main Content -->\n    <div class=\"main-content\">\n      <TopBar \n        v-model=\"searchQuery\" \n        @addBookmark=\"openAddBookmarkModal\" \n        @toggleDarkMode=\"toggleDarkMode\" \n      />\n\n      <!-- Bookmark List -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed } from \"vue\";\nimport Sidebar from \"./components/Sidebar.vue\";\nimport TopBar from \"./components/TopBar.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: { Sidebar, TopBar, BookmarkList },\n  setup() {\n    const darkMode = ref(false);\n    const searchQuery = ref(\"\");\n    const selectedCategory = ref(\"All\");\n    const bookmarks = ref([\n      { id: 1, title: \"Vue.js\", url: \"https://vuejs.org\", category: \"Learning\", tags: [\"JavaScript\", \"Frontend\"] },\n      { id: 2, title: \"Google\", url: \"https://www.google.com\", category: \"Work\", tags: [\"Search\", \"Tech\"] },\n      { id: 3, title: \"GitHub\", url: \"https://github.com\", category: \"Personal\", tags: [\"Development\", \"Code\"] }\n    ]);\n\n    const toggleDarkMode = () => {\n      darkMode.value = !darkMode.value;\n    };\n\n    const filterByCategory = (category) => {\n      selectedCategory.value = category;\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter((b) => b.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex((b) => b.id === updatedBookmark.id);\n      if (index !== -1) bookmarks.value[index] = updatedBookmark;\n    };\n\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter((bookmark) => {\n        return (\n          (selectedCategory.value === \"All\" || bookmark.category === selectedCategory.value) &&\n          (bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n            bookmark.tags.some((tag) => tag.toLowerCase().includes(searchQuery.value.toLowerCase())))\n        );\n      });\n    });\n\n    return {\n      darkMode,\n      searchQuery,\n      selectedCategory,\n      bookmarks,\n      filteredBookmarks,\n      toggleDarkMode,\n      filterByCategory,\n      deleteBookmark,\n      updateBookmark\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* General Layout */\n.app-container {\n  display: flex;\n  height: 100vh;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n</style>\n"],"mappings":";;EAMSA,KAAK,EAAC;AAAc;;;;;uBAL3BC,mBAAA,CAmBM;IAnBAD,KAAK,EADbE,eAAA,mBACiCC,MAAA,CAAAC,QAAQ;MACrCC,mBAAA,aAAgB,EAChBC,YAAA,CAA8CC,kBAAA;IAApCC,gBAAc,EAAEL,MAAA,CAAAM;EAAgB,+CAE1CJ,mBAAA,kBAAqB,EACrBK,mBAAA,CAaM,OAbNC,UAaM,GAZJL,YAAA,CAIEM,iBAAA;IAXRC,UAAA,EAQiBV,MAAA,CAAAW,WAAW;IAR5B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQiBb,MAAA,CAAAW,WAAW,GAAAE,MAAA;IACnBC,aAAW,EAAEC,IAAA,CAAAC,oBAAoB;IACjCC,gBAAc,EAAEjB,MAAA,CAAAkB;gFAGnBhB,mBAAA,mBAAsB,EACtBC,YAAA,CAIEgB,uBAAA;IAHCC,SAAS,EAAEpB,MAAA,CAAAqB,iBAAiB;IAC5BC,gBAAe,EAAEtB,MAAA,CAAAuB,cAAc;IAC/BC,gBAAe,EAAExB,MAAA,CAAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}