{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, computed, watch } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n    const theme = ref('light'); // Default theme is light\n\n    // On component mount, check the stored theme in localStorage\n    onMounted(() => {\n      const storedTheme = localStorage.getItem('theme');\n      theme.value = storedTheme || 'light'; // Default to light if no theme is saved\n      // Apply the theme to the root element by setting CSS variables\n      document.documentElement.setAttribute('data-theme', theme.value);\n    });\n\n    // Toggle between light and dark theme\n    const toggleTheme = () => {\n      theme.value = theme.value === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', theme.value); // Save the theme in localStorage\n\n      // Set the data-theme attribute on the root element to change styles globally\n      document.documentElement.setAttribute('data-theme', theme.value);\n    };\n\n    // Computed property for filtered bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()));\n      });\n    });\n\n    // Load saved bookmarks from LocalStorage\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save changes to localStorage\n    watch(bookmarks, newBookmarks => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, {\n      deep: true\n    });\n    const addBookmark = bookmark => {\n      bookmarks.value.push({\n        id: Date.now(),\n        // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim())\n      });\n    };\n    const deleteBookmark = id => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n    const updateBookmark = updatedBookmark => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = {\n          ...updatedBookmark\n        };\n      }\n    };\n    const searchBookmarks = () => {\n      // Trigger computed property to filter bookmarks when the button is clicked\n    };\n    return {\n      bookmarks,\n      addBookmark,\n      deleteBookmark,\n      updateBookmark,\n      searchQuery,\n      filteredBookmarks,\n      searchBookmarks,\n      theme,\n      toggleTheme\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","watch","AppHeader","AppFooter","CreateBookmark","BookmarkList","components","setup","bookmarks","searchQuery","theme","storedTheme","localStorage","getItem","value","document","documentElement","setAttribute","toggleTheme","setItem","filteredBookmarks","filter","bookmark","title","toLowerCase","includes","tags","some","tag","savedBookmarks","JSON","parse","newBookmarks","stringify","deep","addBookmark","push","id","Date","now","split","map","trim","deleteBookmark","updateBookmark","updatedBookmark","index","findIndex","searchBookmarks"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <AppHeader />\n    <div class=\"main-container\">\n      <!-- Search Component -->\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchQuery\" \n          type=\"text\" \n          placeholder=\" \" \n        />\n        <button @click=\"searchBookmarks\">Search</button>\n      </div>\n\n      <!-- Create Bookmark Component -->\n      <CreateBookmark @create-bookmark=\"addBookmark\" />\n\n      <!-- Bookmark List Display -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n    <AppFooter />\n\n    <!-- Theme Toggle Button -->\n    <button class=\"theme-toggle\" @click=\"toggleTheme\">\n      Switch to {{ theme === 'light' ? 'Dark' : 'Light' }} Mode\n    </button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, computed, watch } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n    const theme = ref('light'); // Default theme is light\n\n    // On component mount, check the stored theme in localStorage\n    onMounted(() => {\n      const storedTheme = localStorage.getItem('theme');\n      theme.value = storedTheme || 'light'; // Default to light if no theme is saved\n      // Apply the theme to the root element by setting CSS variables\n      document.documentElement.setAttribute('data-theme', theme.value);\n    });\n\n    // Toggle between light and dark theme\n    const toggleTheme = () => {\n      theme.value = theme.value === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', theme.value); // Save the theme in localStorage\n\n      // Set the data-theme attribute on the root element to change styles globally\n      document.documentElement.setAttribute('data-theme', theme.value);\n    };\n\n    // Computed property for filtered bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    // Load saved bookmarks from LocalStorage\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save changes to localStorage\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(), // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    const searchBookmarks = () => {\n      // Trigger computed property to filter bookmarks when the button is clicked\n    };\n\n    return { \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks,\n      searchBookmarks,\n      theme,\n      toggleTheme\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Light and Dark theme styles */\n[data-theme='light'] {\n  --bg-color: #fff;\n  --text-color: #000;\n}\n\n[data-theme='dark'] {\n  --bg-color: #2c2c2c;\n  --text-color: #fff;\n}\n\n.app-container {\n  background-color: var(--bg-color);\n  color: var(--text-color);\n  font-family: Arial, sans-serif;\n}\n\n.search-container {\n  display: flex;\n  justify-content: center; /* Centers the items horizontally */\n  align-items: center; /* Centers the items vertically if needed */\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-container input {\n  padding: 8px;\n  font-size: 14px;\n}\n\n.search-container button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-container button:hover {\n  background-color: #0056c1;\n}\n\n.theme-toggle {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 10px;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.theme-toggle:hover {\n  background-color: #0056c1;\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}