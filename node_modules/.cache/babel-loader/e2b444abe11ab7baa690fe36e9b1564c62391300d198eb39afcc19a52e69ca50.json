{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_CreateBookmark = _resolveComponent(\"CreateBookmark\");\n  const _component_BookmarkList = _resolveComponent(\"BookmarkList\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([$setup.theme, \"app-container\"])\n  }, [_createVNode(_component_AppHeader), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Search Component \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Search Bookmarks\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.searchBookmarks && $setup.searchBookmarks(...args))\n  }, \"Search\")]), _createCommentVNode(\" Create Bookmark Component \"), _createVNode(_component_CreateBookmark, {\n    onCreateBookmark: $setup.addBookmark\n  }, null, 8 /* PROPS */, [\"onCreateBookmark\"]), _createCommentVNode(\" Bookmark List Display \"), _createVNode(_component_BookmarkList, {\n    bookmarks: $setup.filteredBookmarks,\n    onDeleteBookmark: $setup.deleteBookmark,\n    onUpdateBookmark: $setup.updateBookmark\n  }, null, 8 /* PROPS */, [\"bookmarks\", \"onDeleteBookmark\", \"onUpdateBookmark\"])]), _createVNode(_component_AppFooter), _createCommentVNode(\" Dark/Light Mode Toggle \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.toggleTheme && $setup.toggleTheme(...args)),\n    class: \"theme-toggle-btn\"\n  }, _toDisplayString($setup.theme === 'dark' ? 'Switch to Light Mode' : 'Switch to Dark Mode'), 1 /* TEXT */)], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","theme","_createVNode","_component_AppHeader","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_cache","$event","searchQuery","type","placeholder","onClick","args","searchBookmarks","_component_CreateBookmark","onCreateBookmark","addBookmark","_component_BookmarkList","bookmarks","filteredBookmarks","onDeleteBookmark","deleteBookmark","onUpdateBookmark","updateBookmark","_component_AppFooter","toggleTheme"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"theme\" class=\"app-container\">\n    <AppHeader />\n    <div class=\"main-container\">\n      <!-- Search Component -->\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchQuery\" \n          type=\"text\" \n          placeholder=\"Search Bookmarks\" \n        />\n        <button @click=\"searchBookmarks\">Search</button>\n      </div>\n\n      <!-- Create Bookmark Component -->\n      <CreateBookmark @create-bookmark=\"addBookmark\" />\n\n      <!-- Bookmark List Display -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n\n    <AppFooter />\n\n    <!-- Dark/Light Mode Toggle -->\n    <button @click=\"toggleTheme\" class=\"theme-toggle-btn\">\n      {{ theme === 'dark' ? 'Switch to Light Mode' : 'Switch to Dark Mode' }}\n    </button>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n    const theme = ref(localStorage.getItem('theme') || 'light'); // Load theme from LocalStorage\n\n    // Toggle between light and dark mode\n    const toggleTheme = () => {\n      theme.value = theme.value === 'light' ? 'dark' : 'light';\n      localStorage.setItem('theme', theme.value); // Persist the theme in localStorage\n    };\n\n    // Computed property to filter bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    // Load saved bookmarks from LocalStorage\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save bookmarks to LocalStorage whenever they change\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(), // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    const searchBookmarks = () => {\n      // Trigger computed property to filter bookmarks when the button is clicked\n    };\n\n    return { \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks,\n      searchBookmarks,\n      theme,\n      toggleTheme,\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Global Styles for Light and Dark Themes */\n.app-container {\n  padding: 20px;\n}\n\n/* Light Theme Styles */\nbody.light {\n  background-color: #ffffff;\n  color: #333;\n}\n\nbody.light .theme-toggle-btn {\n  background-color: #0070f3;\n  color: white;\n}\n\nbody.light .search-container input {\n  border: 1px solid #0070f3;\n}\n\nbody.light .search-container button {\n  background-color: #0070f3;\n  color: white;\n}\n\n/* Dark Theme Styles */\nbody.dark {\n  background-color: #333;\n  color: #ffffff;\n}\n\nbody.dark .theme-toggle-btn {\n  background-color: #444;\n  color: white;\n}\n\nbody.dark .search-container input {\n  border: 1px solid #444;\n}\n\nbody.dark .search-container button {\n  background-color: #444;\n  color: white;\n}\n\n/* Search Container Styles */\n.search-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-container input {\n  padding: 8px;\n  font-size: 14px;\n  border-radius: 5px;\n  width: 250px;\n}\n\n.search-container button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  border-radius: 5px;\n  border: none;\n}\n\n/* Hover Effect */\n.search-container button:hover {\n  background-color: #0056c1;\n}\n\n.theme-toggle-btn {\n  margin-top: 20px;\n  padding: 10px 20px;\n  font-size: 16px;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n  transition: background-color 0.3s ease;\n}\n\n.theme-toggle-btn:hover {\n  background-color: #0056c1;\n}\n</style>\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAkB;;;;;;uBAJjCC,mBAAA,CA8BM;IA9BAD,KAAK,EADbE,eAAA,EACeC,MAAA,CAAAC,KAAK,EAAQ,eAAe;MACvCC,YAAA,CAAaC,oBAAA,GACbC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,sBAAyB,EACzBF,mBAAA,CAOM,OAPNG,UAOM,G,gBANJH,mBAAA,CAIE;IAVV,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOmBT,MAAA,CAAAU,WAAW,GAAAD,MAAA;IACpBE,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAFHZ,MAAA,CAAAU,WAAW,E,GAItBN,mBAAA,CAAgD;IAAvCS,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEd,MAAA,CAAAe,eAAA,IAAAf,MAAA,CAAAe,eAAA,IAAAD,IAAA,CAAe;KAAE,QAAM,E,GAGzCR,mBAAA,+BAAkC,EAClCJ,YAAA,CAAiDc,yBAAA;IAAhCC,gBAAe,EAAEjB,MAAA,CAAAkB;EAAW,+CAE7CZ,mBAAA,2BAA8B,EAC9BJ,YAAA,CAIEiB,uBAAA;IAHCC,SAAS,EAAEpB,MAAA,CAAAqB,iBAAiB;IAC5BC,gBAAe,EAAEtB,MAAA,CAAAuB,cAAc;IAC/BC,gBAAe,EAAExB,MAAA,CAAAyB;oFAItBvB,YAAA,CAAawB,oBAAA,GAEbpB,mBAAA,4BAA+B,EAC/BF,mBAAA,CAES;IAFAS,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEd,MAAA,CAAA2B,WAAA,IAAA3B,MAAA,CAAA2B,WAAA,IAAAb,IAAA,CAAW;IAAEjB,KAAK,EAAC;sBAC9BG,MAAA,CAAAC,KAAK,6E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}