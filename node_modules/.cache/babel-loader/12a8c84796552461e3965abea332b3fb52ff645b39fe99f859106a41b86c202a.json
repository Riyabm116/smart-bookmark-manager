{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n    const mode = ref(localStorage.getItem('mode') || 'light'); // Default mode from localStorage or 'light'\n\n    // Computed property for searched bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()));\n      });\n    });\n\n    // Load from localStorage when app starts\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save changes to localStorage\n    watch(bookmarks, newBookmarks => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, {\n      deep: true\n    });\n\n    // Toggle between light and dark mode\n    const toggleMode = () => {\n      mode.value = mode.value === 'light' ? 'dark' : 'light';\n      localStorage.setItem('mode', mode.value); // Save mode to localStorage\n    };\n    const addBookmark = bookmark => {\n      bookmarks.value.push({\n        id: Date.now(),\n        // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim())\n      });\n    };\n    const deleteBookmark = id => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n    const updateBookmark = updatedBookmark => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = {\n          ...updatedBookmark\n        };\n      }\n    };\n    const searchBookmarks = () => {\n      // Trigger computed property to filter bookmarks when the button is clicked\n    };\n    return {\n      bookmarks,\n      addBookmark,\n      deleteBookmark,\n      updateBookmark,\n      searchQuery,\n      filteredBookmarks,\n      searchBookmarks,\n      mode,\n      toggleMode\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","computed","AppHeader","AppFooter","CreateBookmark","BookmarkList","components","setup","bookmarks","searchQuery","mode","localStorage","getItem","filteredBookmarks","value","filter","bookmark","title","toLowerCase","includes","tags","some","tag","savedBookmarks","JSON","parse","newBookmarks","setItem","stringify","deep","toggleMode","addBookmark","push","id","Date","now","split","map","trim","deleteBookmark","updateBookmark","updatedBookmark","index","findIndex","searchBookmarks"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"mode\" class=\"app-container\">\n    <AppHeader />\n    <div class=\"main-container\">\n      <!-- Search Component -->\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchQuery\" \n          type=\"text\" \n          placeholder=\"Search bookmarks\"\n        />\n        <button @click=\"searchBookmarks\">Search</button>\n      </div>\n\n      <!-- Create Bookmark Component -->\n      <CreateBookmark @create-bookmark=\"addBookmark\" />\n\n      <!-- Bookmark List Display -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n\n    <button @click=\"toggleMode\" class=\"mode-toggle\">\n      Toggle {{ mode === 'dark' ? 'Light' : 'Dark' }} Mode\n    </button>\n\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n    const mode = ref(localStorage.getItem('mode') || 'light'); // Default mode from localStorage or 'light'\n\n    // Computed property for searched bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    // Load from localStorage when app starts\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save changes to localStorage\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    // Toggle between light and dark mode\n    const toggleMode = () => {\n      mode.value = mode.value === 'light' ? 'dark' : 'light';\n      localStorage.setItem('mode', mode.value); // Save mode to localStorage\n    };\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(), // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    const searchBookmarks = () => {\n      // Trigger computed property to filter bookmarks when the button is clicked\n    };\n\n    return { \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks,\n      searchBookmarks,\n      mode, \n      toggleMode\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* General Styles for Light and Dark Modes */\n.light {\n  background-color: #ffffff;\n  color: #333;\n}\n\n.dark {\n  background-color: #121212;\n  color: #f0f0f0;\n}\n\n.app-container {\n  font-family: Arial, sans-serif;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n}\n\n.main-container {\n  flex: 1;\n  padding: 20px;\n}\n\n/* Search Box */\n.search-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-container input {\n  padding: 8px;\n  font-size: 14px;\n}\n\n.search-container button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-container button:hover {\n  background-color: #0056c1;\n}\n\n/* Mode Toggle Button */\n.mode-toggle {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  padding: 10px 20px;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 25px;\n  cursor: pointer;\n}\n\n.mode-toggle:hover {\n  background-color: #0056c1;\n}\n\n/* App Header and Footer Styling (if necessary) */\n.app-header, .app-footer {\n  padding: 20px;\n  text-align: center;\n}\n\n.app-header {\n  background-color: #f8f8f8;\n}\n\n.app-footer {\n  background-color: #f1f1f1;\n}\n\n</style>\n"],"mappings":";;;;;AAkCA,SAASA,GAAG,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAO,QAAS,KAAK;AACrD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,cAAa,MAAO,iCAAiC;AAC5D,OAAOC,YAAW,MAAO,+BAA+B;AAExD,eAAe;EACbC,UAAU,EAAE;IACVJ,SAAS;IACTC,SAAS;IACTC,cAAc;IACdC;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,SAAQ,GAAIV,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMW,WAAU,GAAIX,GAAG,CAAC,EAAE,CAAC;IAC3B,MAAMY,IAAG,GAAIZ,GAAG,CAACa,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC,EAAE;;IAE3D;IACA,MAAMC,iBAAgB,GAAIZ,QAAQ,CAAC,MAAM;MACvC,OAAOO,SAAS,CAACM,KAAK,CAACC,MAAM,CAACC,QAAO,IAAK;QACxC,OACEA,QAAQ,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,WAAW,CAACK,KAAK,CAACI,WAAW,CAAC,CAAC,KACrEF,QAAQ,CAACI,IAAI,CAACC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACJ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,WAAW,CAACK,KAAK,CAACI,WAAW,CAAC,CAAC,CAAC;MAEzF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACAnB,SAAS,CAAC,MAAM;MACd,MAAMwB,cAAa,GAAIZ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MACxD,IAAIW,cAAc,EAAE;QAClBf,SAAS,CAACM,KAAI,GAAIU,IAAI,CAACC,KAAK,CAACF,cAAc,CAAC;MAC9C;IACF,CAAC,CAAC;;IAEF;IACAvB,KAAK,CAACQ,SAAS,EAAGkB,YAAY,IAAK;MACjCf,YAAY,CAACgB,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACI,SAAS,CAACF,YAAY,CAAC,CAAC;IACjE,CAAC,EAAE;MAAEG,IAAI,EAAE;IAAK,CAAC,CAAC;;IAElB;IACA,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvBpB,IAAI,CAACI,KAAI,GAAIJ,IAAI,CAACI,KAAI,KAAM,OAAM,GAAI,MAAK,GAAI,OAAO;MACtDH,YAAY,CAACgB,OAAO,CAAC,MAAM,EAAEjB,IAAI,CAACI,KAAK,CAAC,EAAE;IAC5C,CAAC;IAED,MAAMiB,WAAU,GAAKf,QAAQ,IAAK;MAChCR,SAAS,CAACM,KAAK,CAACkB,IAAI,CAAC;QACnBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAE;QAChB,GAAGnB,QAAQ;QACXI,IAAI,EAAEJ,QAAQ,CAACI,IAAI,CAACgB,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACf,GAAE,IAAKA,GAAG,CAACgB,IAAI,CAAC,CAAC;MACtD,CAAC,CAAC;IACJ,CAAC;IAED,MAAMC,cAAa,GAAKN,EAAE,IAAK;MAC7BzB,SAAS,CAACM,KAAI,GAAIN,SAAS,CAACM,KAAK,CAACC,MAAM,CAACC,QAAO,IAAKA,QAAQ,CAACiB,EAAC,KAAMA,EAAE,CAAC;IAC1E,CAAC;IAED,MAAMO,cAAa,GAAKC,eAAe,IAAK;MAC1C,MAAMC,KAAI,GAAIlC,SAAS,CAACM,KAAK,CAAC6B,SAAS,CAAC3B,QAAO,IAAKA,QAAQ,CAACiB,EAAC,KAAMQ,eAAe,CAACR,EAAE,CAAC;MACvF,IAAIS,KAAI,KAAM,CAAC,CAAC,EAAE;QAChBlC,SAAS,CAACM,KAAK,CAAC4B,KAAK,IAAI;UAAE,GAAGD;QAAgB,CAAC;MACjD;IACF,CAAC;IAED,MAAMG,eAAc,GAAIA,CAAA,KAAM;MAC5B;IAAA,CACD;IAED,OAAO;MACLpC,SAAS;MACTuB,WAAW;MACXQ,cAAc;MACdC,cAAc;MACd/B,WAAW;MACXI,iBAAiB;MACjB+B,eAAe;MACflC,IAAI;MACJoB;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}