{"ast":null,"code":"export default {\n  props: {\n    mode: String // Receives the current mode (light/dark)\n  },\n  emits: ['toggle-mode'],\n  // Emits an event when the button is clicked\n  setup(props, {\n    emit\n  }) {\n    const toggleMode = () => {\n      emit('toggle-mode'); // Triggers the mode toggle in App.vue\n    };\n    return {\n      toggleMode\n    };\n  }\n};","map":{"version":3,"names":["props","mode","String","emits","setup","emit","toggleMode"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header :class=\"mode\">\n    <div class=\"logo\">\n      <h1>Smart Bookmark Manager</h1>\n    </div>\n    <!-- Toggle Mode Button -->\n    <button @click=\"toggleMode\" class=\"mode-toggle-btn\">\n      {{ mode === 'light' ? 'Switch to Dark Mode' : 'Switch to Light Mode' }}\n    </button>\n  </header>\n</template>\n\n<script>\nexport default {\n  props: {\n    mode: String,  // Receives the current mode (light/dark)\n  },\n  emits: ['toggle-mode'],  // Emits an event when the button is clicked\n  setup(props, { emit }) {\n    const toggleMode = () => {\n      emit('toggle-mode');  // Triggers the mode toggle in App.vue\n    };\n\n    return { toggleMode };\n  }\n};\n</script>\n\n<style scoped>\nheader {\n  padding: 1rem;\n  background-color: var(--header-bg, #ffffff);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nheader.light {\n  background-color: #ffffff;\n  color: #000;\n}\n\nheader.dark {\n  background-color: #333333;\n  color: #fff;\n}\n\n.mode-toggle-btn {\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.mode-toggle-btn:hover {\n  background-color: #0056c1;\n}\n</style>\n"],"mappings":"AAaA,eAAe;EACbA,KAAK,EAAE;IACLC,IAAI,EAAEC,MAAM,CAAG;EACjB,CAAC;EACDC,KAAK,EAAE,CAAC,aAAa,CAAC;EAAG;EACzBC,KAAKA,CAACJ,KAAK,EAAE;IAAEK;EAAK,CAAC,EAAE;IACrB,MAAMC,UAAS,GAAIA,CAAA,KAAM;MACvBD,IAAI,CAAC,aAAa,CAAC,EAAG;IACxB,CAAC;IAED,OAAO;MAAEC;IAAW,CAAC;EACvB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}