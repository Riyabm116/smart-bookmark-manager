{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_CreateBookmark = _resolveComponent(\"CreateBookmark\");\n  const _component_BookmarkList = _resolveComponent(\"BookmarkList\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([$setup.mode, \"app-container\"])\n  }, [_createVNode(_component_AppHeader, {\n    mode: $setup.mode,\n    onToggleMode: $setup.toggleMode,\n    onToggleForm: $setup.toggleForm\n  }, null, 8 /* PROPS */, [\"mode\", \"onToggleMode\", \"onToggleForm\"]), _createElementVNode(\"div\", _hoisted_1, [$setup.showForm ? (_openBlock(), _createBlock(_component_CreateBookmark, {\n    key: 0,\n    onCreateBookmark: $setup.addBookmark\n  }, null, 8 /* PROPS */, [\"onCreateBookmark\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_BookmarkList, {\n    bookmarks: $setup.filteredBookmarks,\n    onDeleteBookmark: $setup.deleteBookmark,\n    onUpdateBookmark: $setup.updateBookmark\n  }, null, 8 /* PROPS */, [\"bookmarks\", \"onDeleteBookmark\", \"onUpdateBookmark\"])]), _createVNode(_component_AppFooter, {\n    mode: $setup.mode\n  }, null, 8 /* PROPS */, [\"mode\"])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","mode","_createVNode","_component_AppHeader","onToggleMode","toggleMode","onToggleForm","toggleForm","_createElementVNode","_hoisted_1","showForm","_createBlock","_component_CreateBookmark","key","onCreateBookmark","addBookmark","_createCommentVNode","_component_BookmarkList","bookmarks","filteredBookmarks","onDeleteBookmark","deleteBookmark","onUpdateBookmark","updateBookmark","_component_AppFooter"],"sources":["/Users/riyabm/Documents/GitHub/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"mode\" class=\"app-container\">\n    <AppHeader :mode=\"mode\" @toggle-mode=\"toggleMode\" @toggle-form=\"toggleForm\" />\n    <div class=\"main-container\">\n      <CreateBookmark v-if=\"showForm\" @create-bookmark=\"addBookmark\" />\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n    <AppFooter :mode=\"mode\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const mode = ref(localStorage.getItem(\"mode\") || \"light\");\n    const bookmarks = ref([]);\n    const showForm = ref(false);  // State to toggle the visibility of CreateBookmark form\n    const searchQuery = ref('');\n\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(), \n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    const toggleMode = () => {\n      mode.value = mode.value === \"light\" ? \"dark\" : \"light\";\n      localStorage.setItem(\"mode\", mode.value);\n    };\n\n    const toggleForm = () => {\n      showForm.value = !showForm.value;  // Toggle the form visibility\n    };\n\n    return { \n      mode, \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks,\n      toggleMode,\n      showForm,  // Pass showForm state to template\n      toggleForm, // Pass toggleForm method to template\n    };\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n}\n\n.app-container.light {\n  background-color: #f0f0f0;\n  color: #000;\n}\n\n.app-container.dark {\n  background-color: #121212;\n  color: #f5f5f5;\n}\n\nheader {\n  padding: 0.1rem 1rem;  /* Reduced header padding */\n  background-color: var(--header-bg, #ffffff);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 0.3rem;  /* Reduced space between header and content */\n}\n\nheader.light {\n  background-color: #ffffff;\n  color: #000;\n}\n\nheader.dark {\n  background-color: #333333;\n  color: #fff;\n}\n\n.controls {\n  display: flex;\n  align-items: center;\n  gap: 6px; /* Reduced gap between controls */\n}\n\n.search-bar {\n  padding: 4px;\n  font-size: 12px;\n  width: 150px;  /* Reduced width */\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\n.search-btn {\n  padding: 4px 12px;  /* Reduced padding */\n  font-size: 12px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-btn:hover {\n  background-color: #0056c1;\n}\n\n.mode-toggle-btn {\n  padding: 6px 16px;  /* Adjusted padding */\n  border: none;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border-radius: 5px;\n  font-size: 12px;  /* Adjusted font size */\n}\n\n.mode-toggle-btn:hover {\n  background-color: #0056c1;\n}\n\n.add-bookmark-btn {\n  padding: 6px 12px;\n  font-size: 16px;\n  font-weight: bold;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.add-bookmark-btn:hover {\n  background-color: #218838;\n}\n\n.main-container {\n  padding: 0.2rem;  /* Further reduced padding */\n  margin-top: 0.3rem;  /* Further reduced space between content and header */\n  margin-bottom: 0.3rem;  /* Further reduced space between content and footer */\n}\n\nfooter {\n  padding: 0.1rem 1rem;  /* Reduced footer padding */\n  background-color: #333;\n  color: white;\n  text-align: center;\n  margin-top: 0.2rem;  /* Reduced space between content and footer */\n}\n\nfooter.light {\n  background-color: #f0f0f0;\n  color: #000;\n}\n\nfooter.dark {\n  background-color: #333;\n  color: #f5f5f5;\n}\n</style>\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAgB;;;;;;uBAF7BC,mBAAA,CAWM;IAXAD,KAAK,EADbE,eAAA,EACeC,MAAA,CAAAC,IAAI,EAAQ,eAAe;MACtCC,YAAA,CAA8EC,oBAAA;IAAlEF,IAAI,EAAED,MAAA,CAAAC,IAAI;IAAGG,YAAW,EAAEJ,MAAA,CAAAK,UAAU;IAAGC,YAAW,EAAEN,MAAA,CAAAO;qEAChEC,mBAAA,CAOM,OAPNC,UAOM,GANkBT,MAAA,CAAAU,QAAQ,I,cAA9BC,YAAA,CAAiEC,yBAAA;IAJvEC,GAAA;IAIuCC,gBAAe,EAAEd,MAAA,CAAAe;mDAJxDC,mBAAA,gBAKMd,YAAA,CAIEe,uBAAA;IAHCC,SAAS,EAAElB,MAAA,CAAAmB,iBAAiB;IAC5BC,gBAAe,EAAEpB,MAAA,CAAAqB,cAAc;IAC/BC,gBAAe,EAAEtB,MAAA,CAAAuB;oFAGtBrB,YAAA,CAA0BsB,oBAAA;IAAdvB,IAAI,EAAED,MAAA,CAAAC;EAAI,kC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}