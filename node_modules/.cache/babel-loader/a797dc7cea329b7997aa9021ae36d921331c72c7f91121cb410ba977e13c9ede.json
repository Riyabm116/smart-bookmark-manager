{"ast":null,"code":"export default {\n  data() {\n    return {\n      // Object to hold the bookmark details\n      bookmark: {\n        title: '',\n        url: '',\n        tags: '',\n        category: ''\n      }\n    };\n  },\n  methods: {\n    // This method handles the bookmark creation when the form is submitted\n    submitBookmark() {\n      // Emit the bookmark data to the parent component\n      this.$emit('create-bookmark', this.bookmark);\n      // Clear the form fields after submitting\n      this.clearForm();\n    },\n    // This method handles saving the bookmark (called when the save button is clicked)\n    saveBookmark() {\n      // Emit the bookmark data to the parent component\n      this.$emit('create-bookmark', this.bookmark);\n      // Clear the form fields after saving\n      this.clearForm();\n    },\n    // This method clears the form fields after submission or saving\n    clearForm() {\n      this.bookmark = {\n        title: '',\n        url: '',\n        tags: '',\n        category: ''\n      };\n    }\n  }\n};","map":{"version":3,"names":["data","bookmark","title","url","tags","category","methods","submitBookmark","$emit","clearForm","saveBookmark"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/components/CreateBookmark.vue"],"sourcesContent":["<template>\n  <!-- Main container for the form -->\n  <div class=\"bookmark-form-container\">\n    <div class=\"bookmark-form\">\n      <h2>Add New Bookmark</h2>\n\n      <!-- Form for creating or saving a bookmark -->\n      <form @submit.prevent=\"submitBookmark\">\n        \n        <!-- Input for the bookmark title -->\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input v-model=\"bookmark.title\" type=\"text\" id=\"title\" />\n        </div>\n\n        <!-- Input for the bookmark URL -->\n        <div class=\"form-group\">\n          <label for=\"url\">URL</label>\n          <input v-model=\"bookmark.url\" type=\"url\" id=\"url\" />\n        </div>\n\n        <!-- Input for tags, user can enter multiple tags -->\n        <div class=\"form-group\">\n          <label for=\"tags\">Tags</label>\n          <input v-model=\"bookmark.tags\" type=\"text\" id=\"tags\" />\n        </div>\n\n        <!-- Dropdown for selecting the category of the bookmark -->\n        <div class=\"form-group\">\n          <label for=\"category\">Category</label>\n          <select v-model=\"bookmark.category\" id=\"category\">\n            <option value=\"\">Select Category</option>\n            <option value=\"Work\">Work</option>\n            <option value=\"Personal\">Personal</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n\n        <!-- Button group for adding and saving the bookmark -->\n        <div class=\"button-group\">\n          <button type=\"submit\" class=\"add-button\">Add</button>\n          <button @click.prevent=\"saveBookmark\" class=\"save-button\">Save</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      // Object to hold the bookmark details\n      bookmark: {\n        title: '',\n        url: '',\n        tags: '',\n        category: '',\n      },\n    };\n  },\n  methods: {\n    // This method handles the bookmark creation when the form is submitted\n    submitBookmark() {\n      // Emit the bookmark data to the parent component\n      this.$emit('create-bookmark', this.bookmark);\n      // Clear the form fields after submitting\n      this.clearForm();\n    },\n    \n    // This method handles saving the bookmark (called when the save button is clicked)\n    saveBookmark() {\n      // Emit the bookmark data to the parent component\n      this.$emit('create-bookmark', this.bookmark);\n      // Clear the form fields after saving\n      this.clearForm();\n    },\n\n    // This method clears the form fields after submission or saving\n    clearForm() {\n      this.bookmark = { title: '', url: '', tags: '', category: '' };\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Container for the bookmark form */\n.bookmark-form-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n  margin: auto;\n}\n\n/* Form styling */\n.bookmark-form {\n  background: rgba(255, 255, 255, 0.1);\n  padding: 30px;\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  color: black;\n  width: 100%;\n}\n\n/* Header of the form */\nh2 {\n  text-align: center;\n  margin-bottom: 20px;\n  font-size: 1.5rem;\n}\n\n/* Styling for each input and select field */\n.form-group {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\ninput, select {\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  font-size: 14px;\n  outline: none;\n}\n\n/* Focus state for inputs and selects */\ninput:focus, select:focus {\n  border: 2px solid #0070f3;\n}\n\n/* Button group styling */\n.button-group {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n/* Common button styling */\nbutton {\n  flex: 1;\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n/* Styling for Add button */\n.add-button {\n  background: #0070f3;\n  color: white;\n}\n\n/* Hover effect for Add button */\n.add-button:hover {\n  background: #0056c1;\n}\n\n/* Styling for Save button */\n.save-button {\n  background: #28a745;\n  color: white;\n}\n\n/* Hover effect for Save button */\n.save-button:hover {\n  background: #218838;\n}\n</style>\n"],"mappings":"AAiDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACL;MACAC,QAAQ,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACAC,cAAcA,CAAA,EAAG;MACf;MACA,IAAI,CAACC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACP,QAAQ,CAAC;MAC5C;MACA,IAAI,CAACQ,SAAS,CAAC,CAAC;IAClB,CAAC;IAED;IACAC,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAACF,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACP,QAAQ,CAAC;MAC5C;MACA,IAAI,CAACQ,SAAS,CAAC,CAAC;IAClB,CAAC;IAED;IACAA,SAASA,CAAA,EAAG;MACV,IAAI,CAACR,QAAO,GAAI;QAAEC,KAAK,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAChE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}