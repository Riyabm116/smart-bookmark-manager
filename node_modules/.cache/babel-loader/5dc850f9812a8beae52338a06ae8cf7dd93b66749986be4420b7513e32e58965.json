{"ast":null,"code":"export default {\n  data() {\n    return {\n      bookmark: {\n        title: '',\n        url: '',\n        tags: '',\n        category: ''\n      }\n    };\n  },\n  methods: {\n    submitBookmark() {\n      this.$emit('create-bookmark', this.bookmark);\n      // Clear form after submission\n      this.bookmark.title = '';\n      this.bookmark.url = '';\n      this.bookmark.tags = '';\n      this.bookmark.category = '';\n    },\n    saveBookmark() {\n      // Implement the save logic here\n      this.$emit('create-bookmark', this.bookmark);\n      // You can clear the form or keep the data if you want to keep adding\n      this.bookmark.title = '';\n      this.bookmark.url = '';\n      this.bookmark.tags = '';\n      this.bookmark.category = '';\n    }\n  }\n};","map":{"version":3,"names":["data","bookmark","title","url","tags","category","methods","submitBookmark","$emit","saveBookmark"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/components/CreateBookmark.vue"],"sourcesContent":["<template>\n  <div class=\"bookmark-form-container\">\n    <div class=\"bookmark-form\">\n      <form @submit.prevent=\"submitBookmark\">\n        <div class=\"form-group\">\n          <label for=\"title\">Title</label>\n          <input \n            v-model=\"bookmark.title\" \n            type=\"text\" \n            id=\"title\" \n            \n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"url\">URL</label>\n          <input \n            v-model=\"bookmark.url\" \n            type=\"url\" \n            id=\"url\" \n           \n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"tags\">Tags</label>\n          <input \n            v-model=\"bookmark.tags\" \n            type=\"text\" \n            id=\"tags\" \n           \n          />\n        </div>\n        <div class=\"form-group\">\n          <label for=\"category\">Category</label>\n          <select v-model=\"bookmark.category\" id=\"category\">\n            <option value=\"\">Select Category</option>\n            <option value=\"Work\">Work</option>\n            <option value=\"Personal\">Personal</option>\n            <option value=\"Other\">Other</option>\n          </select>\n        </div>\n        <div class=\"form-group button-group\">\n          <button type=\"submit\" class=\"add-button\">Add Bookmark</button>\n          <button @click.prevent=\"saveBookmark\" class=\"save-button\">Save Bookmark</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      bookmark: {\n        title: '',\n        url: '',\n        tags: '',\n        category: '',\n      },\n    };\n  },\n  methods: {\n    submitBookmark() {\n      this.$emit('create-bookmark', this.bookmark);\n      // Clear form after submission\n      this.bookmark.title = '';\n      this.bookmark.url = '';\n      this.bookmark.tags = '';\n      this.bookmark.category = '';\n    },\n    saveBookmark() {\n      // Implement the save logic here\n      this.$emit('create-bookmark', this.bookmark);\n      // You can clear the form or keep the data if you want to keep adding\n      this.bookmark.title = '';\n      this.bookmark.url = '';\n      this.bookmark.tags = '';\n      this.bookmark.category = '';\n    },\n  },\n};\n</script>\n\n<style scoped>\n/* Center the form horizontally and vertically */\n.bookmark-form-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n  margin-top: 20px;\n}\n\n.bookmark-form {\n  width: 100%;\n  max-width: 400px;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\ninput[type=\"text\"],\ninput[type=\"url\"],\nselect {\n  width: 100%;\n  padding: 8px 12px;\n  font-size: 14px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n  margin-bottom: 10px;\n  transition: border-color 0.3s ease, box-shadow 0.3s ease;\n}\n\ninput[type=\"text\"]:focus,\ninput[type=\"url\"]:focus,\nselect:focus {\n  border-color: #0070f3;\n  outline: none;\n  box-shadow: 0 0 4px rgba(0, 112, 243, 0.4);\n}\n\ninput::placeholder {\n  color: #aaa;\n  font-style: italic;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n}\n\n.form-group label {\n  font-weight: 600;\n  margin-bottom: 5px;\n  font-size: 14px;\n  color: #333;\n}\n\n.button-group {\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n}\n\nbutton {\n  padding: 8px 16px;\n  font-size: 12px; /* Smaller button size */\n  cursor: pointer;\n  border-radius: 5px;\n  width: 48%;\n}\n\n.add-button {\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  transition: background-color 0.3s ease;\n}\n\n.add-button:hover {\n  background-color: #0056c1;\n}\n\n.save-button {\n  background-color: #28a745;\n  color: white;\n  border: none;\n  transition: background-color 0.3s ease;\n}\n\n.save-button:hover {\n  background-color: #218838;\n}\n</style>\n"],"mappings":"AAkDA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,EAAE;QACPC,IAAI,EAAE,EAAE;QACRC,QAAQ,EAAE;MACZ;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACP,QAAQ,CAAC;MAC5C;MACA,IAAI,CAACA,QAAQ,CAACC,KAAI,GAAI,EAAE;MACxB,IAAI,CAACD,QAAQ,CAACE,GAAE,GAAI,EAAE;MACtB,IAAI,CAACF,QAAQ,CAACG,IAAG,GAAI,EAAE;MACvB,IAAI,CAACH,QAAQ,CAACI,QAAO,GAAI,EAAE;IAC7B,CAAC;IACDI,YAAYA,CAAA,EAAG;MACb;MACA,IAAI,CAACD,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACP,QAAQ,CAAC;MAC5C;MACA,IAAI,CAACA,QAAQ,CAACC,KAAI,GAAI,EAAE;MACxB,IAAI,CAACD,QAAQ,CAACE,GAAE,GAAI,EAAE;MACtB,IAAI,CAACF,QAAQ,CAACG,IAAG,GAAI,EAAE;MACvB,IAAI,CAACH,QAAQ,CAACI,QAAO,GAAI,EAAE;IAC7B;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}