{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_CreateBookmark = _resolveComponent(\"CreateBookmark\");\n  const _component_BookmarkList = _resolveComponent(\"BookmarkList\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass(['app-container', $setup.mode])\n  }, [_createVNode(_component_AppHeader, {\n    mode: $setup.mode,\n    onToggleMode: $setup.toggleMode,\n    onToggleForm: $setup.toggleForm\n  }, null, 8 /* PROPS */, [\"mode\", \"onToggleMode\", \"onToggleForm\"]), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" CreateBookmark form is shown when showForm is true \"), $setup.showForm ? (_openBlock(), _createBlock(_component_CreateBookmark, {\n    key: 0,\n    onCreateBookmark: $setup.addBookmark\n  }, null, 8 /* PROPS */, [\"onCreateBookmark\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_BookmarkList, {\n    bookmarks: $setup.filteredBookmarks,\n    onDeleteBookmark: $setup.deleteBookmark,\n    onUpdateBookmark: $setup.updateBookmark\n  }, null, 8 /* PROPS */, [\"bookmarks\", \"onDeleteBookmark\", \"onUpdateBookmark\"])]), _createVNode(_component_AppFooter, {\n    mode: $setup.mode\n  }, null, 8 /* PROPS */, [\"mode\"])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","mode","_createVNode","_component_AppHeader","onToggleMode","toggleMode","onToggleForm","toggleForm","_createElementVNode","_hoisted_1","_createCommentVNode","showForm","_createBlock","_component_CreateBookmark","key","onCreateBookmark","addBookmark","_component_BookmarkList","bookmarks","filteredBookmarks","onDeleteBookmark","deleteBookmark","onUpdateBookmark","updateBookmark","_component_AppFooter"],"sources":["/Users/riyabm/Documents/GitHub/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"['app-container', mode]\">\n    <AppHeader :mode=\"mode\" @toggle-mode=\"toggleMode\" @toggle-form=\"toggleForm\" />\n    <div class=\"main-container\">\n      <!-- CreateBookmark form is shown when showForm is true -->\n      <CreateBookmark v-if=\"showForm\" @create-bookmark=\"addBookmark\" />\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n    <AppFooter :mode=\"mode\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const mode = ref(localStorage.getItem(\"mode\") || \"light\");\n    const bookmarks = ref([]);\n    const showForm = ref(false);  // State to toggle the visibility of CreateBookmark form\n    const searchQuery = ref('');\n\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n      // Apply the mode to the body\n      document.body.classList.add(mode.value);\n    });\n\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(), \n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    const toggleMode = () => {\n      mode.value = mode.value === \"light\" ? \"dark\" : \"light\";\n      localStorage.setItem(\"mode\", mode.value);\n      // Update the body class to reflect the new mode\n      document.body.classList.remove('light', 'dark');\n      document.body.classList.add(mode.value);\n    };\n\n    const toggleForm = () => {\n      showForm.value = !showForm.value;  // Toggle the form visibility\n    };\n\n    return { \n      mode, \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks,\n      toggleMode,\n      showForm,  // Pass showForm state to template\n      toggleForm, // Pass toggleForm method to template\n    };\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  font-family: Arial, sans-serif;\n}\n\n.app-container.light {\n  background-color: #f0f0f0;\n  color: #000;\n}\n\n.app-container.dark {\n  background-color: #121212;\n  color: #f5f5f5;\n}\n\nbody.light {\n  background-color: #f0f0f0;\n  color: #000;\n}\n\nbody.dark {\n  background-color: #121212;\n  color: #f5f5f5;\n}\n</style>\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAgB;;;;;;uBAF7BC,mBAAA,CAYM;IAZAD,KAAK,EADbE,eAAA,mBACiCC,MAAA,CAAAC,IAAI;MACjCC,YAAA,CAA8EC,oBAAA;IAAlEF,IAAI,EAAED,MAAA,CAAAC,IAAI;IAAGG,YAAW,EAAEJ,MAAA,CAAAK,UAAU;IAAGC,YAAW,EAAEN,MAAA,CAAAO;qEAChEC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,wDAA2D,EACrCV,MAAA,CAAAW,QAAQ,I,cAA9BC,YAAA,CAAiEC,yBAAA;IALvEC,GAAA;IAKuCC,gBAAe,EAAEf,MAAA,CAAAgB;mDALxDN,mBAAA,gBAMMR,YAAA,CAIEe,uBAAA;IAHCC,SAAS,EAAElB,MAAA,CAAAmB,iBAAiB;IAC5BC,gBAAe,EAAEpB,MAAA,CAAAqB,cAAc;IAC/BC,gBAAe,EAAEtB,MAAA,CAAAuB;oFAGtBrB,YAAA,CAA0BsB,oBAAA;IAAdvB,IAAI,EAAED,MAAA,CAAAC;EAAI,kC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}