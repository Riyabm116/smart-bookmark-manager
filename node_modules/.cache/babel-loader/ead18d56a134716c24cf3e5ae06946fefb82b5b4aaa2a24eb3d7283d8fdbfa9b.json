{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n    const selectedCategory = ref('');\n\n    // Computed property for filtered and searched bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        const matchesSearch = bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()));\n        const matchesCategory = selectedCategory.value ? bookmark.category === selectedCategory.value : true;\n        return matchesSearch && matchesCategory;\n      });\n    });\n\n    // Load from localStorage when app starts\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save changes to localStorage\n    watch(bookmarks, newBookmarks => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, {\n      deep: true\n    });\n    const addBookmark = bookmark => {\n      bookmarks.value.push({\n        id: Date.now(),\n        // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim())\n      });\n    };\n    const deleteBookmark = id => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n    const updateBookmark = updatedBookmark => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = {\n          ...updatedBookmark\n        };\n      }\n    };\n    return {\n      bookmarks,\n      addBookmark,\n      deleteBookmark,\n      updateBookmark,\n      searchQuery,\n      selectedCategory,\n      filteredBookmarks\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","computed","AppHeader","AppFooter","CreateBookmark","BookmarkList","components","setup","bookmarks","searchQuery","selectedCategory","filteredBookmarks","value","filter","bookmark","matchesSearch","title","toLowerCase","includes","tags","some","tag","matchesCategory","category","savedBookmarks","localStorage","getItem","JSON","parse","newBookmarks","setItem","stringify","deep","addBookmark","push","id","Date","now","split","map","trim","deleteBookmark","updateBookmark","updatedBookmark","index","findIndex"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    <AppHeader />\n    <div class=\"main-container\">\n      <!-- Search and Filter -->\n      <div class=\"search-filter\">\n        <input \n          v-model=\"searchQuery\" \n          type=\"text\" \n          placeholder=\"Search bookmarks by title or tags\" \n        />\n        <select v-model=\"selectedCategory\">\n          <option value=\"\">All Categories</option>\n          <option value=\"Work\">Work</option>\n          <option value=\"Personal\">Personal</option>\n          <option value=\"Learning\">Learning</option>\n          <option value=\"Entertainment\">Entertainment</option>\n        </select>\n      </div>\n\n      <!-- Create Bookmark Component -->\n      <CreateBookmark @create-bookmark=\"addBookmark\" />\n\n      <!-- Bookmark List Display -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n    const selectedCategory = ref('');\n    \n    // Computed property for filtered and searched bookmarks\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        const matchesSearch = \n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()));\n        \n        const matchesCategory = selectedCategory.value ? bookmark.category === selectedCategory.value : true;\n\n        return matchesSearch && matchesCategory;\n      });\n    });\n\n    // Load from localStorage when app starts\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save changes to localStorage\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(), // Unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    return { \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      selectedCategory, \n      filteredBookmarks,\n    };\n  }\n};\n</script>\n\n<style scoped>\n.search-filter {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-filter input {\n  padding: 8px;\n  font-size: 14px;\n}\n\n.search-filter select {\n  padding: 8px;\n  font-size: 14px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}