{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.iterator.some.js\";\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList\n  },\n  setup() {\n    const mode = ref(localStorage.getItem(\"mode\") || \"light\");\n    const bookmarks = ref([]);\n    const showForm = ref(false);\n    const searchQuery = ref('');\n\n    // Filtered bookmarks based on searchQuery\n    const filteredBookmarks = computed(() => {\n      if (!searchQuery.value.trim()) {\n        return bookmarks.value;\n      }\n      return bookmarks.value.filter(bookmark => bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || bookmark.url.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n      // Added URL search\n      bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase())));\n    });\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n    watch(bookmarks, newBookmarks => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, {\n      deep: true\n    });\n    const addBookmark = bookmark => {\n      bookmarks.value.push({\n        id: Date.now(),\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim())\n      });\n    };\n    const deleteBookmark = id => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n    const updateBookmark = updatedBookmark => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = {\n          ...updatedBookmark\n        };\n      }\n    };\n    const toggleMode = () => {\n      mode.value = mode.value === \"light\" ? \"dark\" : \"light\";\n      localStorage.setItem(\"mode\", mode.value);\n    };\n    const toggleForm = () => {\n      showForm.value = !showForm.value;\n    };\n    return {\n      mode,\n      bookmarks,\n      addBookmark,\n      deleteBookmark,\n      updateBookmark,\n      searchQuery,\n      filteredBookmarks,\n      toggleMode,\n      showForm,\n      toggleForm\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","computed","AppHeader","AppFooter","CreateBookmark","BookmarkList","components","setup","mode","localStorage","getItem","bookmarks","showForm","searchQuery","filteredBookmarks","value","trim","filter","bookmark","title","toLowerCase","includes","url","tags","some","tag","savedBookmarks","JSON","parse","newBookmarks","setItem","stringify","deep","addBookmark","push","id","Date","now","split","map","deleteBookmark","updateBookmark","updatedBookmark","index","findIndex","toggleMode","toggleForm"],"sources":["/Users/riyabm/Documents/GitHub/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n      <div :class=\"mode\" class=\"app-container\">\n        <AppHeader \n          :mode=\"mode\" \n          :searchQuery=\"searchQuery\"\n          @toggle-mode=\"toggleMode\" \n          @toggle-form=\"toggleForm\"\n          @update:searchQuery=\"searchQuery = $event\"\n        />\n        <div class=\"main-container\">\n         <CreateBookmark v-if=\"showForm\" @create-bookmark=\"addBookmark\" />\n          <BookmarkList \n            :bookmarks=\"filteredBookmarks\" \n            @delete-bookmark=\"deleteBookmark\" \n            @update-bookmark=\"updateBookmark\" \n          />\n        </div>\n        <AppFooter :mode=\"mode\" />\n      </div>\n    </template>\n    \n    <script>\n    import { ref, onMounted, watch, computed } from \"vue\";\n    import AppHeader from \"./components/AppHeader.vue\";\n    import AppFooter from \"./components/AppFooter.vue\";\n    import CreateBookmark from \"./components/CreateBookmark.vue\";\n    import BookmarkList from \"./components/BookmarkList.vue\";\n    \n    export default {\n      components: {\n        AppHeader,\n        AppFooter,\n        CreateBookmark,\n        BookmarkList,\n      },\n      setup() {\n        const mode = ref(localStorage.getItem(\"mode\") || \"light\");\n        const bookmarks = ref([]);\n        const showForm = ref(false);\n        const searchQuery = ref('');\n    \n        // Filtered bookmarks based on searchQuery\n        const filteredBookmarks = computed(() => {\n          if (!searchQuery.value.trim()) {\n            return bookmarks.value;\n          }\n          return bookmarks.value.filter(bookmark => \n            bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) ||\n            bookmark.url.toLowerCase().includes(searchQuery.value.toLowerCase()) || // Added URL search\n            bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n          );\n        });\n    \n        onMounted(() => {\n          const savedBookmarks = localStorage.getItem(\"bookmarks\");\n          if (savedBookmarks) {\n            bookmarks.value = JSON.parse(savedBookmarks);\n          }\n        });\n    \n        watch(bookmarks, (newBookmarks) => {\n          localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n        }, { deep: true });\n    \n        const addBookmark = (bookmark) => {\n          bookmarks.value.push({\n            id: Date.now(), \n            ...bookmark,\n            tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n          });\n        };\n    \n        const deleteBookmark = (id) => {\n          bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n        };\n    \n        const updateBookmark = (updatedBookmark) => {\n          const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n          if (index !== -1) {\n            bookmarks.value[index] = { ...updatedBookmark };\n          }\n        };\n    \n        const toggleMode = () => {\n          mode.value = mode.value === \"light\" ? \"dark\" : \"light\";\n          localStorage.setItem(\"mode\", mode.value);\n        };\n    \n        const toggleForm = () => {\n          showForm.value = !showForm.value;\n        };\n    \n        return { \n          mode, \n          bookmarks, \n          addBookmark, \n          deleteBookmark, \n          updateBookmark, \n          searchQuery, \n          filteredBookmarks,\n          toggleMode,\n          showForm, \n          toggleForm\n        };\n      }\n    };\n    </script>\n    \n\n<style scoped>\n.app-container {\n  font-family: Arial, sans-serif;\n  transition: background-color 0.3s ease, color 0.3s ease; /* Smooth transition */\n  margin: 0; /* Remove all margin from the app container */\n  padding: 0; /* Remove all padding */\n}\n\n/* Light Mode Styles */\n.app-container.light {\n  background-color: #f0f0f0;\n  color: #000;\n}\n\n.app-container.light header,\n.app-container.light footer {\n  background-color: #ffffff;\n  color: #000;\n}\n\n/* Dark Mode Styles */\n.app-container.dark {\n  background-color: #121212;\n  color: #f5f5f5;\n}\n\n.app-container.dark header,\n.app-container.dark footer {\n  background-color: #333333;\n  color: #fff;\n}\n\nheader {\n  padding: 0.5rem; /* Reduced padding for header */\n  margin: 0; /* Remove space around the header */\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.search-bar {\n  padding: 8px;\n  font-size: 14px;\n  width: 200px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\n.search-btn {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-btn:hover {\n  background-color: #0056c1;\n}\n\n.mode-toggle-btn {\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.mode-toggle-btn:hover {\n  background-color: #0056c1;\n}\n\n.add-bookmark-btn {\n  padding: 8px 15px;\n  font-size: 18px;\n  font-weight: bold;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.add-bookmark-btn:hover {\n  background-color: #218838;\n}\n\n\n.main-container {\n  margin: 0; \n  padding: 0; \n  flex-grow: 1; \n}\n\n\nfooter {\n  padding: 0.5rem; \n  margin: 0; \n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}