{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"controls\"\n};\nconst _hoisted_2 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"header\", {\n    class: _normalizeClass($props.mode)\n  }, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"logo\"\n  }, [_createElementVNode(\"h1\", null, \"Smart Bookmark Manager\")], -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    value: $props.searchQuery,\n    onInput: _cache[0] || (_cache[0] = $event => _ctx.$emit('update:searchQuery', $event.target.value)),\n    class: \"search-bar\",\n    type: \"text\",\n    placeholder: \"Search Bookmarks\"\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_2), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.searchBookmarks && $setup.searchBookmarks(...args)),\n    class: \"search-btn\"\n  }, \"Search\"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.toggleForm && $setup.toggleForm(...args)),\n    class: \"add-bookmark-btn\"\n  }, \"+\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.toggleMode && $setup.toggleMode(...args)),\n    class: \"mode-toggle-btn\"\n  }, _toDisplayString($props.mode === 'light' ? 'Dark Mode' : 'Light Mode'), 1 /* TEXT */)])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$props","mode","_createElementVNode","_hoisted_1","value","searchQuery","onInput","_cache","$event","_ctx","$emit","target","type","placeholder","_hoisted_2","onClick","args","$setup","searchBookmarks","toggleForm","toggleMode"],"sources":["/Users/riyabm/Documents/GitHub/smart-bookmark-manager/src/components/AppHeader.vue"],"sourcesContent":["<template>\n  <header :class=\"mode\">\n    <div class=\"logo\">\n      <h1>Smart Bookmark Manager</h1>\n    </div>\n    <div class=\"controls\">\n      <input \n        :value=\"searchQuery\"\n        @input=\"$emit('update:searchQuery', $event.target.value)\" \n        class=\"search-bar\"\n        type=\"text\" \n        placeholder=\"Search Bookmarks\" \n      />\n\n      <button @click=\"searchBookmarks\" class=\"search-btn\">Search</button>\n\n      <button @click=\"toggleForm\" class=\"add-bookmark-btn\">+</button>\n      \n      <button @click=\"toggleMode\" class=\"mode-toggle-btn\">\n        {{ mode === 'light' ? 'Dark Mode' : 'Light Mode' }}\n      </button>\n    </div>\n  </header>\n</template>\n\n<script>\nimport { ref } from 'vue';\n\nexport default {\n  props: {\n    mode: String,\n    searchQuery: String, // Fixed: Accept searchQuery as a prop\n    bookmarks: Array, \n  },\n  emits: ['toggle-mode', 'toggle-form', 'update:searchQuery'],\n  setup(props, { emit }) {\n    const searchBookmarks = () => {\n      if (!Array.isArray(props.bookmarks)) {\n        console.error('Bookmarks are not defined or not an array');\n        return;\n      }\n      if (props.searchQuery.trim() === '') {\n        console.log('Search query is empty');\n      } else {\n        const filteredBookmarks = props.bookmarks.filter(bookmark => \n          bookmark.title.toLowerCase().includes(props.searchQuery.toLowerCase()) ||\n          bookmark.url.toLowerCase().includes(props.searchQuery.toLowerCase())\n        );\n        console.log('Filtered Bookmarks:', filteredBookmarks);\n      }\n    };\n\n    const toggleMode = () => emit('toggle-mode');\n    const toggleForm = () => emit('toggle-form');\n\n    return { \n      searchBookmarks, \n      toggleMode, \n      toggleForm \n    };\n  }\n};\n</script>\n\n<style scoped>\nheader {\n  padding: 1rem;\n  background-color: var(--header-bg, #ffffff);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nheader.light {\n  background-color: #ffffff;\n  color: #000;\n}\n\nheader.dark {\n  background-color: #333333;\n  color: #fff;\n}\n\n.controls {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.search-bar {\n  padding: 8px;\n  font-size: 14px;\n  width: 200px;\n  border-radius: 4px;\n  border: 1px solid #ccc;\n}\n\n.search-btn {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-btn:hover {\n  background-color: #0056c1;\n}\n\n.mode-toggle-btn {\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.mode-toggle-btn:hover {\n  background-color: #0056c1;\n}\n\n.add-bookmark-btn {\n  padding: 8px 15px;\n  font-size: 18px;\n  font-weight: bold;\n  background-color: #28a745;\n  color: white;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n}\n\n.add-bookmark-btn:hover {\n  background-color: #218838;\n}\n</style>\n"],"mappings":";;EAKSA,KAAK,EAAC;AAAU;mBALzB;;uBACEC,mBAAA,CAqBS;IArBAD,KAAK,EADhBE,eAAA,CACkBC,MAAA,CAAAC,IAAI;gCAClBC,mBAAA,CAEM;IAFDL,KAAK,EAAC;EAAM,IACfK,mBAAA,CAA+B,YAA3B,wBAAsB,E,sBAE5BA,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJD,mBAAA,CAME;IALCE,KAAK,EAAEJ,MAAA,CAAAK,WAAW;IAClBC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,uBAAuBF,MAAM,CAACG,MAAM,CAACP,KAAK;IACvDP,KAAK,EAAC,YAAY;IAClBe,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;2CAXpBC,UAAA,GAcMZ,mBAAA,CAAmE;IAA1Da,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,MAAA,CAAAC,eAAA,IAAAD,MAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;IAAEnB,KAAK,EAAC;KAAa,QAAM,GAE1DK,mBAAA,CAA+D;IAAtDa,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,MAAA,CAAAE,UAAA,IAAAF,MAAA,CAAAE,UAAA,IAAAH,IAAA,CAAU;IAAEnB,KAAK,EAAC;KAAmB,GAAC,GAEtDK,mBAAA,CAES;IAFAa,OAAK,EAAAR,MAAA,QAAAA,MAAA,UAAAS,IAAA,KAAEC,MAAA,CAAAG,UAAA,IAAAH,MAAA,CAAAG,UAAA,IAAAJ,IAAA,CAAU;IAAEnB,KAAK,EAAC;sBAC7BG,MAAA,CAAAC,IAAI,0D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}