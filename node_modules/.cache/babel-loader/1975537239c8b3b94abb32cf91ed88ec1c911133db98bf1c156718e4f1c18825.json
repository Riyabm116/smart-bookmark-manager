{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport AppHeader from './components/AppHeader.vue';\nimport BookmarkList from './components/BookmarkList.vue';\nexport default {\n  components: {\n    AppHeader,\n    BookmarkList\n  },\n  setup() {\n    const mode = ref(localStorage.getItem('mode') || 'light');\n    const showForm = ref(false); // Controls form visibility\n    const bookmark = ref({\n      title: '',\n      url: '',\n      tags: '',\n      category: ''\n    });\n    const bookmarks = ref([]);\n    const isEditMode = ref(false); // Determines if it's in edit mode (if needed)\n\n    const toggleMode = () => {\n      mode.value = mode.value === 'light' ? 'dark' : 'light';\n      localStorage.setItem('mode', mode.value);\n    };\n    const toggleForm = () => {\n      showForm.value = !showForm.value; // Toggle form visibility\n    };\n    const submitBookmark = () => {\n      bookmarks.value.push({\n        ...bookmark.value\n      });\n      clearForm();\n      showForm.value = false; // Hide form after submission\n    };\n    const saveBookmark = () => {\n      bookmarks.value.push({\n        ...bookmark.value\n      });\n      clearForm();\n      showForm.value = false; // Hide form after saving\n    };\n    const clearForm = () => {\n      bookmark.value = {\n        title: '',\n        url: '',\n        tags: '',\n        category: ''\n      }; // Clear the form fields\n      isEditMode.value = false; // Reset the edit mode state\n    };\n    return {\n      mode,\n      showForm,\n      bookmarks,\n      toggleMode,\n      toggleForm,\n      submitBookmark,\n      saveBookmark,\n      clearForm,\n      isEditMode\n    };\n  }\n};","map":{"version":3,"names":["ref","AppHeader","BookmarkList","components","setup","mode","localStorage","getItem","showForm","bookmark","title","url","tags","category","bookmarks","isEditMode","toggleMode","value","setItem","toggleForm","submitBookmark","push","clearForm","saveBookmark"],"sources":["/Users/riyabm/Documents/GitHub/smart-bookmark-manager/src/components/CreateBookmark.vue"],"sourcesContent":["<template>\n  <div :class=\"mode\">\n    <AppHeader :mode=\"mode\" @toggle-mode=\"toggleMode\" @toggle-form=\"toggleForm\" />\n    \n    <!-- Conditionally render the form -->\n    <div v-if=\"showForm\" class=\"bookmark-form-container\">\n      <div class=\"bookmark-form\">\n        <h2>Add New Bookmark</h2>\n        <form @submit.prevent=\"submitBookmark\">\n          <div class=\"form-group\">\n            <label for=\"title\">Title</label>\n            <input v-model=\"bookmark.title\" type=\"text\" id=\"title\" aria-label=\"Bookmark Title\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"url\">URL</label>\n            <input v-model=\"bookmark.url\" type=\"url\" id=\"url\" aria-label=\"Bookmark URL\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"tags\">Tags</label>\n            <input v-model=\"bookmark.tags\" type=\"text\" id=\"tags\" aria-label=\"Bookmark Tags\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"category\">Category</label>\n            <select v-model=\"bookmark.category\" id=\"category\" aria-label=\"Bookmark Category\">\n              <option value=\"\">Select Category</option>\n              <option value=\"Work\">Work</option>\n              <option value=\"Personal\">Personal</option>\n              <option value=\"Other\">Other</option>\n            </select>\n          </div>\n          <div class=\"button-group\">\n            <button type=\"submit\" class=\"add-button\">{{ isEditMode ? 'Save' : 'Add' }}</button>\n            <button @click.prevent=\"clearForm\" class=\"cancel-button\">Cancel</button>\n          </div>\n        </form>\n      </div>\n    </div>\n\n    <!-- Other content of your app -->\n    <BookmarkList :bookmarks=\"bookmarks\" />\n  </div>\n</template>\n\n<script>\nimport { ref } from 'vue';\nimport AppHeader from './components/AppHeader.vue';\nimport BookmarkList from './components/BookmarkList.vue';\n\nexport default {\n  components: {\n    AppHeader,\n    BookmarkList\n  },\n  setup() {\n    const mode = ref(localStorage.getItem('mode') || 'light');\n    const showForm = ref(false);  // Controls form visibility\n    const bookmark = ref({\n      title: '',\n      url: '',\n      tags: '',\n      category: '',\n    });\n    const bookmarks = ref([]);\n    const isEditMode = ref(false);  // Determines if it's in edit mode (if needed)\n\n    const toggleMode = () => {\n      mode.value = mode.value === 'light' ? 'dark' : 'light';\n      localStorage.setItem('mode', mode.value);\n    };\n\n    const toggleForm = () => {\n      showForm.value = !showForm.value; // Toggle form visibility\n    };\n\n    const submitBookmark = () => {\n      bookmarks.value.push({ ...bookmark.value });\n      clearForm();\n      showForm.value = false; // Hide form after submission\n    };\n\n    const saveBookmark = () => {\n      bookmarks.value.push({ ...bookmark.value });\n      clearForm();\n      showForm.value = false; // Hide form after saving\n    };\n\n    const clearForm = () => {\n      bookmark.value = { title: '', url: '', tags: '', category: '' }; // Clear the form fields\n      isEditMode.value = false;  // Reset the edit mode state\n    };\n\n    return {\n      mode,\n      showForm,\n      bookmarks,\n      toggleMode,\n      toggleForm,\n      submitBookmark,\n      saveBookmark,\n      clearForm,\n      isEditMode\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Styling for header, form, and controls */\n\n.bookmark-form-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: auto;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n  max-width: 500px;\n  margin: auto;\n}\n\n.bookmark-form {\n  background: rgba(255, 255, 255, 0.1);\n  padding: 30px;\n  border-radius: 12px;\n  backdrop-filter: blur(10px);\n  color: black;\n  width: 100%;\n}\n\nh2 {\n  text-align: center;\n  margin-bottom: 20px;\n  font-size: 1.5rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 15px;\n}\n\nlabel {\n  font-weight: bold;\n  margin-bottom: 5px;\n}\n\ninput, select {\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  font-size: 14px;\n  outline: none;\n}\n\ninput:focus, select:focus {\n  border: 2px solid #0070f3;\n}\n\n.button-group {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\nbutton {\n  flex: 1;\n  padding: 10px;\n  border-radius: 8px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.add-button {\n  background: #0070f3;\n  color: white;\n}\n\n.add-button:hover {\n  background: #0056c1;\n}\n\n.save-button {\n  background: #28a745;\n  color: white;\n}\n\n.save-button:hover {\n  background: #218838;\n}\n\n.cancel-button {\n  background: #f44336;\n  color: white;\n}\n\n.cancel-button:hover {\n  background: #d32f2f;\n}\n</style>\n"],"mappings":";AA4CA,SAASA,GAAE,QAAS,KAAK;AACzB,OAAOC,SAAQ,MAAO,4BAA4B;AAClD,OAAOC,YAAW,MAAO,+BAA+B;AAExD,eAAe;EACbC,UAAU,EAAE;IACVF,SAAS;IACTC;EACF,CAAC;EACDE,KAAKA,CAAA,EAAG;IACN,MAAMC,IAAG,GAAIL,GAAG,CAACM,YAAY,CAACC,OAAO,CAAC,MAAM,KAAK,OAAO,CAAC;IACzD,MAAMC,QAAO,GAAIR,GAAG,CAAC,KAAK,CAAC,EAAG;IAC9B,MAAMS,QAAO,GAAIT,GAAG,CAAC;MACnBU,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,SAAQ,GAAId,GAAG,CAAC,EAAE,CAAC;IACzB,MAAMe,UAAS,GAAIf,GAAG,CAAC,KAAK,CAAC,EAAG;;IAEhC,MAAMgB,UAAS,GAAIA,CAAA,KAAM;MACvBX,IAAI,CAACY,KAAI,GAAIZ,IAAI,CAACY,KAAI,KAAM,OAAM,GAAI,MAAK,GAAI,OAAO;MACtDX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAEb,IAAI,CAACY,KAAK,CAAC;IAC1C,CAAC;IAED,MAAME,UAAS,GAAIA,CAAA,KAAM;MACvBX,QAAQ,CAACS,KAAI,GAAI,CAACT,QAAQ,CAACS,KAAK,EAAE;IACpC,CAAC;IAED,MAAMG,cAAa,GAAIA,CAAA,KAAM;MAC3BN,SAAS,CAACG,KAAK,CAACI,IAAI,CAAC;QAAE,GAAGZ,QAAQ,CAACQ;MAAM,CAAC,CAAC;MAC3CK,SAAS,CAAC,CAAC;MACXd,QAAQ,CAACS,KAAI,GAAI,KAAK,EAAE;IAC1B,CAAC;IAED,MAAMM,YAAW,GAAIA,CAAA,KAAM;MACzBT,SAAS,CAACG,KAAK,CAACI,IAAI,CAAC;QAAE,GAAGZ,QAAQ,CAACQ;MAAM,CAAC,CAAC;MAC3CK,SAAS,CAAC,CAAC;MACXd,QAAQ,CAACS,KAAI,GAAI,KAAK,EAAE;IAC1B,CAAC;IAED,MAAMK,SAAQ,GAAIA,CAAA,KAAM;MACtBb,QAAQ,CAACQ,KAAI,GAAI;QAAEP,KAAK,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAC,EAAE;MACjEE,UAAU,CAACE,KAAI,GAAI,KAAK,EAAG;IAC7B,CAAC;IAED,OAAO;MACLZ,IAAI;MACJG,QAAQ;MACRM,SAAS;MACTE,UAAU;MACVG,UAAU;MACVC,cAAc;MACdG,YAAY;MACZD,SAAS;MACTP;IACF,CAAC;EACH;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}