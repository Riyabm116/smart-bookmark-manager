{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_CreateBookmark = _resolveComponent(\"CreateBookmark\");\n  const _component_BookmarkList = _resolveComponent(\"BookmarkList\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass($setup.mode)\n  }, [_createVNode(_component_AppHeader, {\n    onToggleMode: $setup.toggleMode\n  }, null, 8 /* PROPS */, [\"onToggleMode\"]), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Search Component \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Search bookmarks...\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.searchBookmarks && $setup.searchBookmarks(...args))\n  }, \"Search\")]), _createCommentVNode(\" Create Bookmark Component \"), _createVNode(_component_CreateBookmark, {\n    onCreateBookmark: $setup.addBookmark\n  }, null, 8 /* PROPS */, [\"onCreateBookmark\"]), _createCommentVNode(\" Bookmark List Display \"), _createVNode(_component_BookmarkList, {\n    bookmarks: $setup.filteredBookmarks,\n    onDeleteBookmark: $setup.deleteBookmark,\n    onUpdateBookmark: $setup.updateBookmark\n  }, null, 8 /* PROPS */, [\"bookmarks\", \"onDeleteBookmark\", \"onUpdateBookmark\"])]), _createVNode(_component_AppFooter)], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","mode","_createVNode","_component_AppHeader","onToggleMode","toggleMode","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_cache","$event","searchQuery","type","placeholder","onClick","args","searchBookmarks","_component_CreateBookmark","onCreateBookmark","addBookmark","_component_BookmarkList","bookmarks","filteredBookmarks","onDeleteBookmark","deleteBookmark","onUpdateBookmark","updateBookmark","_component_AppFooter"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"mode\">\n    <AppHeader @toggle-mode=\"toggleMode\" />\n    <div class=\"main-container\">\n      <!-- Search Component -->\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchQuery\" \n          type=\"text\" \n          placeholder=\"Search bookmarks...\" \n        />\n        <button @click=\"searchBookmarks\">Search</button>\n      </div>\n\n      <!-- Create Bookmark Component -->\n      <CreateBookmark @create-bookmark=\"addBookmark\" />\n\n      <!-- Bookmark List Display -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n    <AppFooter />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const mode = ref(\"light\");  // Light mode by default\n    const bookmarks = ref([]);\n    const searchQuery = ref('');\n\n    const toggleMode = () => {\n      mode.value = mode.value === \"light\" ? \"dark\" : \"light\";\n    };\n\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(),\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),\n      });\n    };\n\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };\n      }\n    };\n\n    const searchBookmarks = () => {};\n\n    return { \n      mode, \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks, \n      searchBookmarks,\n      toggleMode,\n    };\n  }\n};\n</script>\n\n<style scoped>\n/* Global styles for dark and light modes */\nhtml {\n  transition: background-color 0.3s ease, color 0.3s ease;\n}\n\nbody {\n  transition: background-color 0.3s ease, color 0.3s ease;\n  background-color: var(--bg-color);\n  color: var(--text-color);\n}\n\n/* Dark mode variables */\nbody.dark {\n  --bg-color: #333333;\n  --text-color: #ffffff;\n}\n\n/* Light mode variables */\nbody.light {\n  --bg-color: #ffffff;\n  --text-color: #000000;\n}\n\n/* Specific styling for the app */\n.main-container {\n  padding: 20px;\n}\n\n.search-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-container input {\n  padding: 8px;\n  font-size: 14px;\n  border-radius: 5px;\n  border: 1px solid var(--text-color);\n}\n\n.search-container button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-container button:hover {\n  background-color: #0056c1;\n}\n</style>\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAkB;;;;;;uBAJjCC,mBAAA,CAwBM;IAxBAD,KAAK,EADbE,eAAA,CACeC,MAAA,CAAAC,IAAI;MACfC,YAAA,CAAuCC,oBAAA;IAA3BC,YAAW,EAAEJ,MAAA,CAAAK;EAAU,2CACnCC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,sBAAyB,EACzBF,mBAAA,CAOM,OAPNG,UAOM,G,gBANJH,mBAAA,CAIE;IAVV,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOmBX,MAAA,CAAAY,WAAW,GAAAD,MAAA;IACpBE,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAFHd,MAAA,CAAAY,WAAW,E,GAItBN,mBAAA,CAAgD;IAAvCS,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEhB,MAAA,CAAAiB,eAAA,IAAAjB,MAAA,CAAAiB,eAAA,IAAAD,IAAA,CAAe;KAAE,QAAM,E,GAGzCR,mBAAA,+BAAkC,EAClCN,YAAA,CAAiDgB,yBAAA;IAAhCC,gBAAe,EAAEnB,MAAA,CAAAoB;EAAW,+CAE7CZ,mBAAA,2BAA8B,EAC9BN,YAAA,CAIEmB,uBAAA;IAHCC,SAAS,EAAEtB,MAAA,CAAAuB,iBAAiB;IAC5BC,gBAAe,EAAExB,MAAA,CAAAyB,cAAc;IAC/BC,gBAAe,EAAE1B,MAAA,CAAA2B;oFAGtBzB,YAAA,CAAa0B,oBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}