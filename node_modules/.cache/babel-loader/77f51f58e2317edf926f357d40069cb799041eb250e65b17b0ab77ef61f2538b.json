{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-container\"\n};\nconst _hoisted_2 = {\n  class: \"search-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AppHeader = _resolveComponent(\"AppHeader\");\n  const _component_CreateBookmark = _resolveComponent(\"CreateBookmark\");\n  const _component_BookmarkList = _resolveComponent(\"BookmarkList\");\n  const _component_AppFooter = _resolveComponent(\"AppFooter\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([$setup.mode, \"app-container\"])\n  }, [_createVNode(_component_AppHeader, {\n    mode: $setup.mode,\n    onToggleMode: $setup.toggleMode\n  }, null, 8 /* PROPS */, [\"mode\", \"onToggleMode\"]), _createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" Search Section \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.searchQuery = $event),\n    type: \"text\",\n    placeholder: \"Search Bookmarks\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.searchQuery]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.searchBookmarks && $setup.searchBookmarks(...args))\n  }, \"Search\")]), _createCommentVNode(\" Create Bookmark Section \"), _createVNode(_component_CreateBookmark, {\n    onCreateBookmark: $setup.addBookmark\n  }, null, 8 /* PROPS */, [\"onCreateBookmark\"]), _createCommentVNode(\" Display Bookmark List \"), _createVNode(_component_BookmarkList, {\n    bookmarks: $setup.filteredBookmarks,\n    onDeleteBookmark: $setup.deleteBookmark,\n    onUpdateBookmark: $setup.updateBookmark\n  }, null, 8 /* PROPS */, [\"bookmarks\", \"onDeleteBookmark\", \"onUpdateBookmark\"])]), _createVNode(_component_AppFooter, {\n    mode: $setup.mode\n  }, null, 8 /* PROPS */, [\"mode\"])], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$setup","mode","_createVNode","_component_AppHeader","onToggleMode","toggleMode","_createElementVNode","_hoisted_1","_createCommentVNode","_hoisted_2","_cache","$event","searchQuery","type","placeholder","onClick","args","searchBookmarks","_component_CreateBookmark","onCreateBookmark","addBookmark","_component_BookmarkList","bookmarks","filteredBookmarks","onDeleteBookmark","deleteBookmark","onUpdateBookmark","updateBookmark","_component_AppFooter"],"sources":["/Users/riyabm/Desktop/smart-bookmark-manager/src/App.vue"],"sourcesContent":["<template>\n  <div :class=\"mode\" class=\"app-container\">\n    <AppHeader :mode=\"mode\" @toggle-mode=\"toggleMode\" />\n    <div class=\"main-container\">\n      <!-- Search Section -->\n      <div class=\"search-container\">\n        <input \n          v-model=\"searchQuery\" \n          type=\"text\" \n          placeholder=\"Search Bookmarks\" \n        />\n        <button @click=\"searchBookmarks\">Search</button>\n      </div>\n\n      <!-- Create Bookmark Section -->\n      <CreateBookmark @create-bookmark=\"addBookmark\" />\n\n      <!-- Display Bookmark List -->\n      <BookmarkList \n        :bookmarks=\"filteredBookmarks\" \n        @delete-bookmark=\"deleteBookmark\" \n        @update-bookmark=\"updateBookmark\" \n      />\n    </div>\n    <AppFooter :mode=\"mode\" />\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted, watch, computed } from \"vue\";\nimport AppHeader from \"./components/AppHeader.vue\";\nimport AppFooter from \"./components/AppFooter.vue\";\nimport CreateBookmark from \"./components/CreateBookmark.vue\";\nimport BookmarkList from \"./components/BookmarkList.vue\";\n\nexport default {\n  components: {\n    AppHeader,\n    AppFooter,\n    CreateBookmark,\n    BookmarkList,\n  },\n  setup() {\n    const mode = ref(localStorage.getItem(\"mode\") || \"light\");  // Light or dark mode\n    const bookmarks = ref([]);  // Store for bookmarks\n    const searchQuery = ref('');  // Query for search\n\n    // Computed property to filter bookmarks based on search query\n    const filteredBookmarks = computed(() => {\n      return bookmarks.value.filter(bookmark => {\n        return (\n          bookmark.title.toLowerCase().includes(searchQuery.value.toLowerCase()) || \n          bookmark.tags.some(tag => tag.toLowerCase().includes(searchQuery.value.toLowerCase()))\n        );\n      });\n    });\n\n    // Load bookmarks from localStorage when the component mounts\n    onMounted(() => {\n      const savedBookmarks = localStorage.getItem(\"bookmarks\");\n      if (savedBookmarks) {\n        bookmarks.value = JSON.parse(savedBookmarks);\n      }\n    });\n\n    // Save bookmarks to localStorage every time the list changes\n    watch(bookmarks, (newBookmarks) => {\n      localStorage.setItem(\"bookmarks\", JSON.stringify(newBookmarks));\n    }, { deep: true });\n\n    // Add a new bookmark\n    const addBookmark = (bookmark) => {\n      bookmarks.value.push({\n        id: Date.now(),  // Use timestamp as unique ID\n        ...bookmark,\n        tags: bookmark.tags.split(\",\").map(tag => tag.trim()),  // Convert tags to array\n      });\n    };\n\n    // Delete a bookmark by its ID\n    const deleteBookmark = (id) => {\n      bookmarks.value = bookmarks.value.filter(bookmark => bookmark.id !== id);\n    };\n\n    // Update a bookmark with new values\n    const updateBookmark = (updatedBookmark) => {\n      const index = bookmarks.value.findIndex(bookmark => bookmark.id === updatedBookmark.id);\n      if (index !== -1) {\n        bookmarks.value[index] = { ...updatedBookmark };  // Replace the bookmark with the updated one\n      }\n    };\n\n    // Search function placeholder (could be enhanced further)\n    const searchBookmarks = () => {};\n\n    // Toggle between light and dark mode\n    const toggleMode = () => {\n      mode.value = mode.value === \"light\" ? \"dark\" : \"light\";  // Switch between modes\n      localStorage.setItem(\"mode\", mode.value);  // Save mode to localStorage\n    };\n\n    return { \n      mode, \n      bookmarks, \n      addBookmark, \n      deleteBookmark, \n      updateBookmark, \n      searchQuery, \n      filteredBookmarks,\n      searchBookmarks,\n      toggleMode\n    };\n  }\n};\n</script>\n\n<style scoped>\n.app-container {\n  font-family: Arial, sans-serif; /* Basic font styling */\n}\n\n.app-container.light {\n  background-color: #f0f0f0;  /* Light mode background */\n  color: #000;  /* Light mode text color */\n}\n\n.app-container.dark {\n  background-color: #121212;  /* Dark mode background */\n  color: #f5f5f5;  /* Dark mode text color */\n}\n\n.search-container {\n  display: flex; \n  justify-content: center; \n  align-items: center;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-container input {\n  padding: 8px;\n  font-size: 14px;\n  background-color: var(--input-bg, #fff);\n  color: var(--input-color, #000);\n}\n\n.search-container button {\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  background-color: #0070f3;  /* Button color */\n  color: white;\n  border: none;\n  border-radius: 5px;\n}\n\n.search-container button:hover {\n  background-color: #0056c1;  /* Hover effect for button */\n}\n</style>\n"],"mappings":";;EAGSA,KAAK,EAAC;AAAgB;;EAEpBA,KAAK,EAAC;AAAkB;;;;;;uBAJjCC,mBAAA,CAwBM;IAxBAD,KAAK,EADbE,eAAA,EACeC,MAAA,CAAAC,IAAI,EAAQ,eAAe;MACtCC,YAAA,CAAoDC,oBAAA;IAAxCF,IAAI,EAAED,MAAA,CAAAC,IAAI;IAAGG,YAAW,EAAEJ,MAAA,CAAAK;qDACtCC,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,mBAAA,oBAAuB,EACvBF,mBAAA,CAOM,OAPNG,UAOM,G,gBANJH,mBAAA,CAIE;IAVV,uBAAAI,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOmBX,MAAA,CAAAY,WAAW,GAAAD,MAAA;IACpBE,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC;iDAFHd,MAAA,CAAAY,WAAW,E,GAItBN,mBAAA,CAAgD;IAAvCS,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAM,IAAA,KAAEhB,MAAA,CAAAiB,eAAA,IAAAjB,MAAA,CAAAiB,eAAA,IAAAD,IAAA,CAAe;KAAE,QAAM,E,GAGzCR,mBAAA,6BAAgC,EAChCN,YAAA,CAAiDgB,yBAAA;IAAhCC,gBAAe,EAAEnB,MAAA,CAAAoB;EAAW,+CAE7CZ,mBAAA,2BAA8B,EAC9BN,YAAA,CAIEmB,uBAAA;IAHCC,SAAS,EAAEtB,MAAA,CAAAuB,iBAAiB;IAC5BC,gBAAe,EAAExB,MAAA,CAAAyB,cAAc;IAC/BC,gBAAe,EAAE1B,MAAA,CAAA2B;oFAGtBzB,YAAA,CAA0B0B,oBAAA;IAAd3B,IAAI,EAAED,MAAA,CAAAC;EAAI,kC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}